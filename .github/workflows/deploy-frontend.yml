name: Deploy Frontend to Vercel

on:
  push:
    branches:
      - main
      - staging
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  # Deploy to staging on staging branch or PR
  deploy-staging:
    if: github.ref == 'refs/heads/staging' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    name: Deploy Frontend to Staging
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: production

      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Comment PR with staging URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Frontend staging deployment complete!\\n\\n**Preview URL:** Available in Vercel deployment logs\\n\\nTest your changes before merging to production.'
            })

  # Deploy to production on main branch
  deploy-production:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    name: Deploy Frontend to Production
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Run typecheck
        run: npm run typecheck
        working-directory: frontend

      - name: Run linting  
        run: npm run lint
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: production

      - name: Deploy to Vercel (Production)
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Show deployment URL
        run: |
          echo "üöÄ Frontend deployed successfully to Vercel!"
          echo "üìç Production URL: https://supabase-configurator.vercel.app (or your custom domain)"
          echo ""
          echo "üîß Next steps:"
          echo "   1. Configure custom domain in Vercel dashboard"
          echo "   2. Update DNS records if using custom domain"
          echo "   3. Enable Lighthouse testing with confirmed URL"

  # Health check after deployment
  health-check:
    needs: [deploy-production]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Production Health Check
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Health Check
        run: |
          echo "Checking production health..."
          # Test the deployment - update with your actual Vercel URL
          URL="https://supabase-configurator.vercel.app"
          
          if curl -f -s --max-time 10 "$URL" > /dev/null; then
            echo "‚úÖ Frontend is accessible at $URL"
          else
            echo "‚ùå Frontend health check failed"
            echo "üîç Manual check required at $URL"
            # Don't fail the workflow since URL might be different
          fi

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Production Frontend Deployment Failed',
              body: `Production frontend deployment failed for commit ${context.sha}.\\n\\nPlease investigate immediately.\\n\\n**Commit:** ${context.sha}\\n**Workflow:** ${context.workflow}\\n**Run:** ${context.runId}`
            })

  # Optional: Lighthouse performance test
  lighthouse:
    needs: [deploy-production]
    if: false # Enable once URL is confirmed: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Lighthouse Performance Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 45

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://supabase-configurator.vercel.app
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true